name: Deploy Application
on:
  workflow_dispatch: {}
  push:
    branches:
      - master

jobs:
#   build:
#     runs-on: ubuntu-latest
#     outputs:
#       s3object: ${{ steps.object.outputs.s3object }}
      
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4
      
#     - uses: aws-actions/configure-aws-credentials@v4
#       with:
#         aws-region: ${{ secrets.AWS_REGION }}
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}      
      
#     - name: Create archive
#       id: object
#       run: |
#         git archive --format=tar.gz -o app_$(date +"%Y-%m-%d").tar.gz HEAD
#         s3object=$(echo "app_$(date +"%Y-%m-%d").tar.gz")
#         echo "s3object=$s3object" >> $GITHUB_OUTPUT
#         echo "S3 Object: $s3object"
#     - name: Upload to S3
#       run: |
#         echo "Uploading to S3"
#         aws s3 cp app_$(date +"%Y-%m-%d").tar.gz s3://${{ secrets.S3_BUCKET_NAME }}/
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_REGION: ${{ secrets.AWS_REGION }} 
    
#     - name: Set expiry policy on S3 bucket
#       run: |
#         aws s3api put-bucket-lifecycle-configuration --bucket ${{ secrets.S3_BUCKET_NAME }} --lifecycle-configuration '{"Rules":[{"ID":"ExpireOldBuilds","Prefix":"","Status":"Enabled","Expiration":{"Days":7}}]}'
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_REGION: ${{ secrets.AWS_REGION }} 
##########################################################################################################

  deploy:
    # needs: build
    runs-on: ubuntu-latest
  
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  
      - name: Deploy to Auto Scaling Group
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY_PEM }}
  
        run: |
          echo "Pushing to ASG"
          instance_ids=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-name ${{ secrets.ASG_NAME }} --query 'AutoScalingGroups[].Instances[].InstanceId' --output text)
          echo $instance_ids
          echo "-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAinZ53lSwnp+rHpt/GilaVNM+IwBQet1Ij+qErnTR1wWnhRzE
VsygTB+q0y6vGk/HHTGS95blOm92PIcxp8DHFRS2hObpE1WL6r2/5JiThS0p/B5A
rfP4w1SHCxohyAuOKbDruW4tGGQiRiiGT5lNead6qJYIqH7cX4ssopjn2MiksVtb
KAik3Edrp5gvnbF4fN1Dbzw+8vQTbS0zsx+axvA5bUxCAFpC/9pND2VYGQgX/wVb
LFmwoKgEFsVE3MZlEQ6ZDRI4Zr5cr6lVaUE8XTqORqZGa3w3ysoACPfIKMY6Azpx
R+ru4Grwmu5GwBkh4nmeE1xhqsVgpRbFuv2/pwIDAQABAoIBAHxJ1SMpylDY6nXT
BsipDhjOdhxdD+D5+USWMvuWiTYGMVVfeS6hB9LNKj3ezfdEXWtrMI1mueU2YF/8
yynV9d6KdTvfOqDMTYgtQ68i9mi5HdLeJRkAwvAzU/U3Q9OZ68aotTACIiCe4dUw
Uz/oUI8/Mu9ZnfQBzDdHao2Zy6PfRT60SDoo2KUij2Yo5x3lDWUCZ/eVBjPdmiLp
ls1AjRVssI/dQKofbq3YiGT2K1hrADXZzCjD3BEzg1xvxJUGT4fq2ALRxT+UjcfZ
SrgPEqpIICVOdSDTrkvHOPXWToZIJBVtHK8Kvc2NuCd0QwGdbCf3CHR/uoW3YKAv
3sOJ+CECgYEAwKzsQcULPLisBkDOWXuGRgcQlO6hLJ8OdfRFoBrvQCZaLXJ6FD0J
A4GN1cY7CkEPToFjjiQ4WVhaqe28LMT+acl+1SOTWAILNTyqNVZR0mXGv6Gu9gIT
zHWd2WFEX9StTKCgUIzVMrM5czVztOPk7uLgS9vWVxZ8rkihnsVrxC0CgYEAt/hH
CJ0JVefadUpqCr3e6B/qddFMfXZCMUmcoiJUwjSxGwRIR+AtXo8Hqj79FIeT3ETT
R4LqtxWLzg3eE+lumIoHAFdBHgq7+S41nUquVf7JLSgLX5fusry8T1RypzLonQvp
XwvI5ff7sh26BhgC6ceoSgDC6q8U/Rt58Y7ik6MCgYBhVrsg2wA7U/ysSA83i70h
Ia6R3yCT32M52gdWxGS8XuPN8/iSwucL22ahaj0niAjIm3uFMu04zfc3w//+CiOR
pBcsbIWiv52T7qr6uToq9fn7lB5E8HW6JG1zhb06QMKwZLG5H/0RWRQcDRQAfeWJ
fhrcmBpn8tdYYR8tjAVOnQKBgBz2A9CyT/7rEfP28/ye6VFnfNRxT3ZMwJzbtsG7
X9Z2zw6uvOY7v0isgYtmgRbTRQ6e8xfF30dVJ/4XJsfBrrxqtjFyivi8vdy7Totl
b05wXqEyNaAl3djbZ1WhuK7jj8TxVBq3UzgIsuHWViuRahv9Z1vHBOhHCanSwn6p
fLe7AoGAZzNN64D5PU59fPLHd9t17rl/5E2arzcwMcJljb34kG/fBTVA8lqFp6lX
RaxRP+klsoXxxaLQ51b2crorpAMORpAy5ihinREtDYcKo8dQJaFnCA7PcLLzmKR8
SZ43yyerbnW7cWjXQzd0Rqk3FYVmROcxzI26xmiKhcQP/mXwbHA=
-----END RSA PRIVATE KEY-----paula@DESKTOP-DT3FB05:~$ ls
Paula-ABI-Key.pem                  abi_tasks  snap
Paula-ABI-Key.pem:Zone.Identifier  sa3ed.pem
paula@DESKTOP-DT3FB05:~$ cat Paula-ABI-Key.pem
-----BEGIN RSA PRIVATE KEY-----
MIIEogIBAAKCAQEAinZ53lSwnp+rHpt/GilaVNM+IwBQet1Ij+qErnTR1wWnhRzE
VsygTB+q0y6vGk/HHTGS95blOm92PIcxp8DHFRS2hObpE1WL6r2/5JiThS0p/B5A
rfP4w1SHCxohyAuOKbDruW4tGGQiRiiGT5lNead6qJYIqH7cX4ssopjn2MiksVtb
KAik3Edrp5gvnbF4fN1Dbzw+8vQTbS0zsx+axvA5bUxCAFpC/9pND2VYGQgX/wVb
LFmwoKgEFsVE3MZlEQ6ZDRI4Zr5cr6lVaUE8XTqORqZGa3w3ysoACPfIKMY6Azpx
R+ru4Grwmu5GwBkh4nmeE1xhqsVgpRbFuv2/pwIDAQABAoIBAHxJ1SMpylDY6nXT
BsipDhjOdhxdD+D5+USWMvuWiTYGMVVfeS6hB9LNKj3ezfdEXWtrMI1mueU2YF/8
yynV9d6KdTvfOqDMTYgtQ68i9mi5HdLeJRkAwvAzU/U3Q9OZ68aotTACIiCe4dUw
Uz/oUI8/Mu9ZnfQBzDdHao2Zy6PfRT60SDoo2KUij2Yo5x3lDWUCZ/eVBjPdmiLp
ls1AjRVssI/dQKofbq3YiGT2K1hrADXZzCjD3BEzg1xvxJUGT4fq2ALRxT+UjcfZ
SrgPEqpIICVOdSDTrkvHOPXWToZIJBVtHK8Kvc2NuCd0QwGdbCf3CHR/uoW3YKAv
3sOJ+CECgYEAwKzsQcULPLisBkDOWXuGRgcQlO6hLJ8OdfRFoBrvQCZaLXJ6FD0J
A4GN1cY7CkEPToFjjiQ4WVhaqe28LMT+acl+1SOTWAILNTyqNVZR0mXGv6Gu9gIT
zHWd2WFEX9StTKCgUIzVMrM5czVztOPk7uLgS9vWVxZ8rkihnsVrxC0CgYEAt/hH
CJ0JVefadUpqCr3e6B/qddFMfXZCMUmcoiJUwjSxGwRIR+AtXo8Hqj79FIeT3ETT
R4LqtxWLzg3eE+lumIoHAFdBHgq7+S41nUquVf7JLSgLX5fusry8T1RypzLonQvp
XwvI5ff7sh26BhgC6ceoSgDC6q8U/Rt58Y7ik6MCgYBhVrsg2wA7U/ysSA83i70h
Ia6R3yCT32M52gdWxGS8XuPN8/iSwucL22ahaj0niAjIm3uFMu04zfc3w//+CiOR
pBcsbIWiv52T7qr6uToq9fn7lB5E8HW6JG1zhb06QMKwZLG5H/0RWRQcDRQAfeWJ
fhrcmBpn8tdYYR8tjAVOnQKBgBz2A9CyT/7rEfP28/ye6VFnfNRxT3ZMwJzbtsG7
X9Z2zw6uvOY7v0isgYtmgRbTRQ6e8xfF30dVJ/4XJsfBrrxqtjFyivi8vdy7Totl
b05wXqEyNaAl3djbZ1WhuK7jj8TxVBq3UzgIsuHWViuRahv9Z1vHBOhHCanSwn6p
fLe7AoGAZzNN64D5PU59fPLHd9t17rl/5E2arzcwMcJljb34kG/fBTVA8lqFp6lX
RaxRP+klsoXxxaLQ51b2crorpAMORpAy5ihinREtDYcKo8dQJaFnCA7PcLLzmKR8
SZ43yyerbnW7cWjXQzd0Rqk3FYVmROcxzI26xmiKhcQP/mXwbHA=
-----END RSA PRIVATE KEY-----" > PEM_FILE && chmod 600 PEM_FILE 
          echo $instance_ids 
          echo $(aws s3 ls)
          for instance_id in $instance_ids; do
            public_ip=$(aws ec2 describe-instances --instance-ids $instance_id --query 'Reservations[].Instances[].PublicIpAddress' --output text)
    
            ssh -o StrictHostKeyChecking=no -i PEM_FILE ec2-user@$public_ip "
              cd /home/ec2-user
              aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/app_$(date +"%Y-%m-%d").tar.gz  .
            "
          done

        
  # deploy:
  #   runs-on: ubuntu-latest
  #   # needs: build 
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: deploy to ASG
  #     run: |
  #       echo "Pushing to ASG"
  #       instance_ids=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-name ${{ secrets.ASG_NAME }} --query 'AutoScalingGroups[].Instances[].InstanceId' --output text)
  #       echo $instance_ids
  #       echo "${{ secrets.EC2_KEY }}" > PEM_FILE && chmod 600 PEM_FILE
  #       cat PEM_FILE
  #       echo $instance_ids 
        
  #       for instance_id in $instance_ids; do
  #         public_ip=$(aws ec2 describe-instances --instance-ids $instance_id --query 'Reservations[].Instances[].PublicIpAddress' --output text)
  
  #         ssh -o StrictHostKeyChecking=no -i PEM_FILE ec2-user@$public_ip "
  #           cd /home/ec2-user
  #           aws s3 cp s3://${{ secrets.S3_BUCKET_NAME }}/app_$(date +"%Y-%m-%d").tar.gz  .
  #           "
  #       done
        
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       AWS_REGION: ${{ secrets.AWS_REGION }} 

  
